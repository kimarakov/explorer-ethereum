#!/usr/bin/nodejs

var Web3 = require('web3');
var web3 = new Web3();
web3.setProvider(new web3.providers.HttpProvider('http://localhost:20000'));


function submitTokenContract(tokenName, tokenSymbol, numberOfTokens, decimals, cb) {
    web3.personal.unlockAccount(web3.eth.coinbase, "1234", 60 * 60 * 24, function(err, res) {
        if (err) {
            console.log("ERROR:", err);
        }
        web3.eth.defaultAccount = web3.eth.coinbase;

        var code = '0x606060408190526005805460a060020a60ff021916740100000000000000000000000000000000000000001790556109ca3881900390819083398101604052805160805160a05160c05192939182019291019060008054600160a060020a0319163317905560058054600160a060020a031916331790819055600160a060020a0316600090815260066020908152604082208690556004869055600180548651938290529092601f60026000198487161561010002019093169290920482018390047fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6908101939192909188019083901061013d57805160ff19168380011785555b5061016d9291505b808211156101c65760008155600101610109565b50506003805460ff191682179055505050506107d0806101fa6000396000f35b82800160010185558215610101579182015b8281111561010157825182600050559160200191906001019061014f565b50508160026000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101ca57805160ff19168380011785555b5061011d929150610109565b5090565b828001600101855582156101ba579182015b828111156101ba5782518260005055916020019190600101906101dc56606060405236156100b95760e060020a600035046306fdde0381146100c657806312805ab81461012857806318160ddd1461014f578063313ce5671461015d578063446a1a651461016e57806349d60fea146101865780635cd8ec6b146101ad57806366e6c8af146101d557806370a08231146101fc5780638994eef5146102195780638da5cb5b1461024857806395d89b411461025f578063a9059cbb146102c1578063d9cacff2146102ec578063f2fde38b1461031a575b3461000257610340610002565b346100025760408051600180546020600282841615610100026000190190921691909104601f810182900482028401820190945283835261034293908301828280156104355780601f1061040a57610100808354040283529160200191610435565b346100025761034060043560055460a060020a900460ff1615156000141561043d57610002565b34610002576103b060045481565b34610002576103c260035460ff1681565b34610002576103d960055460a060020a900460ff1681565b3461000257610340600435600054600160a060020a03908116339091161461046e57610002565b346100025761034060043560008054600160a060020a03908116339091161461049957610002565b346100025761034060043560055460a060020a900460ff1615156000141561057557610002565b34610002576103b060043560066020526000908152604090205481565b34610002576103d960043560243560443560055460009060a060020a900460ff1615158114156105a957610002565b34610002576103ed600554600160a060020a031681565b346100025761034260028054604080516020601f600019600186161561010002019094168590049384018190048102820181019092528281529291908301828280156104355780601f1061040a57610100808354040283529160200191610435565b346100025761034060043560243560055460ff60a060020a9091041615156000141561060b57610002565b346100025761034060043560243560443560055460ff60a060020a909104161515600014156106c357610002565b346100025761034060043560005433600160a060020a039081169116146107ae57610002565b005b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156103a25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60408051918252519081900360200190f35b6040805160ff929092168252519081900360200190f35b604080519115158252519081900360200190f35b60408051600160a060020a03929092168252519081900360200190f35b820191906000526020600020905b81548152906001019060200180831161041857829003601f168201915b505050505081565b33600160a060020a039081166000908152600760209081526040808320938516835292905220805460ff1916905550565b6005805460a060020a830274ff00000000000000000000000000000000000000001990911617905550565b60055460a060020a900460ff161515600014156104b557610002565b506000808213156104e857600554600160a060020a03168152600660205260408120548291908201101561051957610002565b50600554600160a060020a031660009081526006602052604081205460001983029190829003101561054657610002565b600554600160a060020a031660009081526006602052604090208054820190556004805482019055610571565b600554600160a060020a03166000908152600660205260409020805482900390556004805482900390555b5050565b33600160a060020a039081166000908152600760209081526040808320938516835292905220805460ff1916600117905550565b33600160a060020a0316600090815260076020908152604080832090915290205460ff1615600114156105db57610002565b600160a060020a0384166000908152600660205260409020548290101561060157610002565b5060019392505050565b33600160a060020a03166000908152600660205260409020548190101561063157610002565b600160a060020a038216600090815260066020526040902054808201101561065857610002565b600160a060020a03338116600081815260066020908152604080832080548790039055938616808352918490208054860190558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b33600160a060020a0316600090815260076020908152604080832090915290205460ff1615600114156106f557610002565b600160a060020a0383166000908152600660205260409020548190101561071b57610002565b600160a060020a038216600090815260066020526040902054818101101561074257610002565b600160a060020a03338116600081815260066020908152604080832080548790039055938616808352918490208054860190558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a3505050565b6000805473ffffffffffffffffffffffffffffffffffffffff1916821790555056';
        var abi = [{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_delegate","type":"address"}],"name":"removeAuthorisation","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"allowOperation","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_allowOperation","type":"bool"}],"name":"setAllowOperation","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_value","type":"int256"}],"name":"adjustOwnerBalance","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_delegate","type":"address"}],"name":"authorise","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"canTransferEx","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferEx","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"type":"function"},{"inputs":[{"name":"initialSupply","type":"uint256"},{"name":"tokenName","type":"string"},{"name":"symbol_","type":"string"},{"name":"decimalUnits","type":"uint8"}],"type":"constructor"},{"payable":false,"type":"fallback"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"}];

        web3.eth.contract(abi).new(numberOfTokens, tokenName, tokenSymbol, decimals, {
            data: code,
            gas: 1000000,
            gasPrice: 1
        }, function(err, contract) { // Note that this callback is called twice
            if (err) {
                console.error("ERROR:", err); // Log any errors
                cb();
            } else if (contract.address) { // If this contract has an address it means that it has been mined and included into the blockchain
                cb({
                    tokenName: tokenName,
                    contractAddress: contract.address
                });
            }
        });
    });
}

submitTokenContract('TestXZA', 'XZA', 1000000, 2, function(res) {
    console.log("Contract Address for XZA: " + res.contractAddress);
});
