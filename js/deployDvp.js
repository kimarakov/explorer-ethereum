#!/usr/bin/nodejs

var Web3 = require('web3');
var web3 = new Web3();
web3.setProvider(new web3.providers.HttpProvider('http://localhost:20000'));


function submitDvPContract(cb) {
    var dvpContractFile = __dirname + '/../Contracts/testDvP.sol';
    web3.personal.unlockAccount(web3.eth.coinbase, "1234", 60 * 60 * 24, function(err, res) {
        if (err) {
            console.log("ERROR:", err);
        }
        web3.eth.defaultAccount = web3.eth.coinbase;
        var code = '0x60606040526001805460a060020a60ff0219167401000000000000000000000000000000000000000017905560008054600160a060020a031916331790556109668061004b6000396000f36060604052361561004b5760e060020a6000350463446a1a65811461005957806349d60fea146100715780638da5cb5b146100985780639d75ad9f146100af578063f2fde38b14610128575b346100025761014e5b610002565b346100025761015060015460a060020a900460ff1681565b346100025761014e600435600054600160a060020a03908116339091161461018157610002565b3461000257610164600154600160a060020a031681565b346100025760408051602060248035600481810135601f810185900485028601850190965285855261014e958135959194604494929390920191819084018382808284375094965050933593505060643591505060843560a43560015460009060ff60a060020a9091041615158114156101ac57610002565b346100025761014e60043560005433600160a060020a0390811691161461085957610002565b005b604080519115158252519081900360200190f35b60408051600160a060020a03929092168252519081900360200190f35b6001805460a060020a830274ff00000000000000000000000000000000000000001990911617905550565b600160a060020a033381166000908152600260209081526040808320938b168352928152828220925189518a939192839285820192918291859183918691600490601f850104600302600f01f150905001915050908152602001604051809103902060005090508060000160009054906101000a9004600160a060020a0316600160a060020a0316600014156103795760c060405190810160405280338152602001878152602001868152602001858152602001848152602001838152602001506002600050600089600160a060020a03168152602001908152602001600020600050600033600160a060020a0316815260200190815260200160002060005087604051808280519060200190808383829060006004602084601f0104600302600f01f150905001915050908152602001604051809103902060005060008201518160000160006101000a815481600160a060020a03021916908302179055506020820151816001016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103d357805160ff19168380011785555b506104039291505b808211156105175760008155600101610365565b8054600160a060020a03888116911614801561051b575061051b6001820187604080516020810190915260009081905281518354849184918491600260018316156101000260001901909216919091041461088957610880565b8280016001018555821561035d579182015b8281111561035d5782518260005055916020019190600101906103e5565b505060408201518160020160006101000a815481600160a060020a030219169083021790555060608201518160030160006101000a815481600160a060020a03021916908302179055506080820151816004016000505560a0820151816005016000505590505086600160a060020a031633600160a060020a03167f2c2c7878e8fee08fe2caef9970a0d22d1ae9be8e1d5930fb51a7d9aafc2438ee8860405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156105005780820380516001836020036101000a031916815260200191505b509250505060405180910390a35b50505050505050565b5090565b801561053757506002810154600160a060020a03908116908516145b801561055357506003810154600160a060020a03908116908616145b80156105625750600481015482145b80156105715750600581015483145b156100545784600160a060020a0316638994eef58833866000604051602001526040518460e060020a0281526004018084600160a060020a0316815260200183600160a060020a031681526020018281526020019350505050602060405180830381600087803b156100025760325a03f1156100025750506040515190508015610670575083600160a060020a0316638994eef53389856000604051602001526040518460e060020a0281526004018084600160a060020a0316815260200183600160a060020a031681526020018281526020019350505050602060405180830381600087803b156100025760325a03f1156100025750506040515190505b156100545784600160a060020a031663d9cacff28833866040518460e060020a0281526004018084600160a060020a0316815260200183600160a060020a031681526020018281526020019350505050600060405180830381600087803b156100025760325a03f1156100025750604080517fd9cacff2000000000000000000000000000000000000000000000000000000008152600160a060020a0333811660048301528b81166024830152604482018790529151918816935060648181019260009290919082900301818387803b156100025760325a03f11561000257505050600160a060020a033381166000908152600260209081526040808320938b168352928152828220925189518a939192839285820192918291859183918691600490601f850104600302600f01f150905001915050908152602001604051809103902060006000820160006101000a815490600160a060020a03021916905560018201600050805460018160011615610100020316600290046000825580601f1061083b57505b505060028101805473ffffffffffffffffffffffffffffffffffffffff19908116909155600382018054909116905560006004820181905560059091015561050e565b601f0160209004906000526020600020908101906107f89190610365565b6000805473ffffffffffffffffffffffffffffffffffffffff19168217905550565b600193505b50505092915050565b5060005b82546002600182161561010002600019019091160481101561087b57818181518110156100025790602001015160f860020a900460f860020a027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916838281546001816001161561010002031660029004811015610002578154600116156109245790600052602060002090602091828204019190065b9054901a60f860020a027fff00000000000000000000000000000000000000000000000000000000000000161461095e5760009350610880565b60010161088d56';
        var abi = [{"constant":true,"inputs":[],"name":"allowOperation","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_allowOperation","type":"bool"}],"name":"setAllowOperation","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_counterparty","type":"address"},{"name":"_tradeId","type":"string"},{"name":"_acceptToken","type":"address"},{"name":"_deliverToken","type":"address"},{"name":"_acceptAmount","type":"uint256"},{"name":"_deliverAmount","type":"uint256"}],"name":"exchangeForValue","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"type":"function"},{"payable":false,"type":"fallback"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Settled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"tradeId","type":"string"}],"name":"Committed","type":"event"}];

        web3.eth.contract(abi).new({
            data: code,
            gas: 1000000,
            gasPrice: 1
        }, function(err, contract) { // Note that this callback is called twice
            if (err) {
                console.error("ERROR:", err); // Log any errors
                cb();
            } else if (contract.address) { // If this contract has an address it means that it has been mined and included into the blockchain
                cb({
                    contractAddress: contract.address
                });
            }
        });
    });
}


submitDvPContract(function(res) {
    console.log("Contract Address for DvP: " + res.contractAddress);
});
